{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imed\\\\Desktop\\\\mern\\\\Full Stack MERN v23.0\\\\Authors\\\\client\\\\src\\\\components\\\\Creat.jsx\";\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { redirect, useNavigate } from 'react-router-dom';\n// import Product from './Product'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Creat = () => {\n  // const navigate = useNavigate()\n  // const [product,SetProduct]=useState()\n  // const [price,SetPrice]=useState()\n  // const [description,SetDescription]=useState()\n  // const [errors, setErrors] = useState(null);\n\n  // const submitHandler = (e) => {\n\n  //     console.log(\"cool\")\n  //     const tempObj = {\n  //         product,\n  //         price,\n  //         description\n\n  //     }\n  //     console.log(tempObj)\n  //     axios.post(\"http://localhost:5000/api/author/\", tempObj)\n  //         .then(res => {\n  //             console.log(\"✅✅✅✅✅✅✅✅✅✅\", res.data)\n  //             navigate('/')\n  //         })\n  //         .catch(err => {\n  //             console.log(\"❌❌❌❌\", err.response.data.errors.title.message)\n  //             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n  //             const errorArr = []; // Define a temp error array to push the messages in\n  //             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n  //                 errorArr.push(errorResponse[key].message)\n  //             }\n  //             // Set Errors\n  //             setErrors(errorArr);\n  //         })\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"text-center fs.1\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"badge bg-light text-dark\",\n          children: \"Product: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: product,\n          onChange: e => {\n            SetProduct(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"badge bg-light text-dark\",\n          children: \"Price \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: e => {\n            SetPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"badge bg-light text-dark\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => {\n            SetDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-secondary\",\n        children: \"Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Creat;\nexport default Creat;\nvar _c;\n$RefreshReg$(_c, \"Creat\");","map":{"version":3,"names":["React","useState","axios","redirect","useNavigate","jsxDEV","_jsxDEV","Creat","children","class","onSubmit","submitHandler","fileName","_jsxFileName","lineNumber","columnNumber","type","value","product","onChange","e","SetProduct","target","price","SetPrice","description","SetDescription","_c","$RefreshReg$"],"sources":["C:/Users/Imed/Desktop/mern/Full Stack MERN v23.0/Authors/client/src/components/Creat.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from \"axios\"\r\nimport { redirect, useNavigate } from 'react-router-dom'\r\n// import Product from './Product'\r\n\r\n\r\nexport const Creat = () => {\r\n    // const navigate = useNavigate()\r\n    // const [product,SetProduct]=useState()\r\n    // const [price,SetPrice]=useState()\r\n    // const [description,SetDescription]=useState()\r\n    // const [errors, setErrors] = useState(null);\r\n\r\n    // const submitHandler = (e) => {\r\n        \r\n    //     console.log(\"cool\")\r\n    //     const tempObj = {\r\n    //         product,\r\n    //         price,\r\n    //         description\r\n            \r\n    //     }\r\n    //     console.log(tempObj)\r\n    //     axios.post(\"http://localhost:5000/api/author/\", tempObj)\r\n    //         .then(res => {\r\n    //             console.log(\"✅✅✅✅✅✅✅✅✅✅\", res.data)\r\n    //             navigate('/')\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(\"❌❌❌❌\", err.response.data.errors.title.message)\r\n    //             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n    //             const errorArr = []; // Define a temp error array to push the messages in\r\n    //             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n    //                 errorArr.push(errorResponse[key].message)\r\n    //             }\r\n    //             // Set Errors\r\n    //             setErrors(errorArr);\r\n    //         })\r\n\r\n    // }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n       \r\n\r\n        <form class=\"text-center fs.1\" onSubmit={submitHandler} >\r\n            <div >\r\n                <label class=\"badge bg-light text-dark\">Product: </label>\r\n                <input type=\"text\"  value={product} onChange={e => { SetProduct(e.target.value) }}/>\r\n                \r\n            </div>\r\n            <div>\r\n                <label class=\"badge bg-light text-dark\">Price </label>\r\n                <input type=\"text\" value={price} onChange={e => { SetPrice(e.target.value) }} />\r\n                \r\n            </div>\r\n            <div>\r\n                <label class=\"badge bg-light text-dark\" >Description </label>\r\n                <input type=\"text\"  value={description} onChange={e => { SetDescription(e.target.value) }}/>\r\n                    \r\n        \r\n            </div>  \r\n            <button type=\"submit\" class=\"btn btn-secondary\" >Creation</button> \r\n        </form >\r\n        {/* <Product/> */}\r\n   \r\n\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\nexport default Creat"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACvB;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAIF,oBACED,OAAA;IAAAE,QAAA,eAGIF,OAAA;MAAMG,KAAK,EAAC,kBAAkB;MAACC,QAAQ,EAAEC,aAAc;MAAAH,QAAA,gBACnDF,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOG,KAAK,EAAC,0BAA0B;UAAAD,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDT,OAAA;UAAOU,IAAI,EAAC,MAAM;UAAEC,KAAK,EAAEC,OAAQ;UAACC,QAAQ,EAAEC,CAAC,IAAI;YAAEC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC;UAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnF,CAAC,eACNT,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOG,KAAK,EAAC,0BAA0B;UAAAD,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDT,OAAA;UAAOU,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEM,KAAM;UAACJ,QAAQ,EAAEC,CAAC,IAAI;YAAEI,QAAQ,CAACJ,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC;UAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/E,CAAC,eACNT,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOG,KAAK,EAAC,0BAA0B;UAAAD,QAAA,EAAE;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7DT,OAAA;UAAOU,IAAI,EAAC,MAAM;UAAEC,KAAK,EAAEQ,WAAY;UAACN,QAAQ,EAAEC,CAAC,IAAI;YAAEM,cAAc,CAACN,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC;UAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG3F,CAAC,eACNT,OAAA;QAAQU,IAAI,EAAC,QAAQ;QAACP,KAAK,EAAC,mBAAmB;QAAAD,QAAA,EAAE;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIP,CAAC;AAIV,CAAC;AAAAY,EAAA,GAnEYpB,KAAK;AAoElB,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}